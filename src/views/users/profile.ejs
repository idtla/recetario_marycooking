<%- include('../partials/header') %>

<div class="container mx-auto px-6 mt-24">
  <div class="flex flex-col md:flex-row gap-8">
    <!-- Columna izquierda: Perfil -->
    <div class="w-full md:w-1/4">
      <!-- Foto de perfil separada -->
      <div class="flex flex-col items-center mb-8">
        <div class="w-40 h-40 rounded-full overflow-hidden mb-8">
          <img 
            src="<%= user.imagen_url %>" 
            alt="Avatar de <%= user.nombre %>"
            class="w-full h-full object-cover"
            onerror="this.src='/assets/img/default-avatar.webp'"
          >
        </div>
      </div>

      <!-- Información del usuario separada -->
      <div class="text-left">
        <h1 class="text-xl font-bold text-gray-900 mb-2"><%= user.nombre %></h1>
        <p class="text-gray-600 text-sm mb-2"><%= user.email %></p>
        <div class="mb-2">
          <span class="text-pink-600 text-sm">Rol: </span>
          <span class="text-gray-900 text-sm font-medium"><%= user.rol %></span>
        </div>
        <div class="mb-4">
          <span class="text-gray-600 text-sm">Estado: </span>
          <span class="inline-flex px-2 text-xs font-medium leading-5 rounded-full
            <% if (user.estado === 'Activo') { %>
              text-green-800 bg-green-100
            <% } else if (user.estado === 'Pendiente') { %>
              text-orange-800 bg-orange-100
            <% } else { %>
              text-red-800 bg-red-100
            <% } %>">
            <%= user.estado %>
          </span>
        </div>
        <div x-data="{ open: false, nombre: '<%= user.nombre %>', email: '<%= user.email %>', showPassword: false, showPasswordFields: false }">
          <button 
            @click="open = true"
            class="w-full px-4 py-2 bg-pink-600 text-white text-sm font-medium rounded-md hover:bg-pink-700 transition-colors duration-150">
            Editar Perfil
          </button>

          <!-- Modal -->
          <div x-show="open"
               style="display: none"
               class="fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center z-50">
            <div class="bg-white rounded-lg p-6 w-full max-w-md mx-4"
                 @click.away="open = false">
              <h3 class="text-lg font-medium text-gray-900 mb-4">Editar Perfil</h3>
              <form @submit.prevent="submitEditProfile($event)" enctype="multipart/form-data">
                <div class="space-y-4">
                  <!-- Imagen de perfil -->
                  <div>
                    <label class="block text-sm font-medium text-gray-700">Imagen de perfil</label>
                    <div class="mt-1 flex items-center space-x-4">
                      <div class="w-20 h-20 rounded-full overflow-hidden bg-gray-100">
                        <img 
                          id="preview-image"
                          src="/assets/img/default-avatar.webp" 
                          alt="Vista previa"
                          class="w-full h-full object-cover"
                          onerror="this.src='/assets/img/default-avatar.webp'"
                        >
                      </div>
                      <div class="flex flex-col space-y-2">
                        <label class="cursor-pointer inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none">
                          <input 
                            type="file" 
                            name="imagen" 
                            accept="image/*"
                            class="hidden"
                            @change="previewImage($event)"
                          >
                          Cambiar imagen
                        </label>
                        <button 
                          type="button"
                          @click="removeImage()"
                          class="inline-flex items-center px-3 py-2 text-sm font-medium text-red-600 hover:text-red-700">
                          Eliminar imagen
                        </button>
                      </div>
                    </div>
                  </div>

                  <div>
                    <label for="nombre" class="block text-sm font-medium text-gray-700">Nombre</label>
                    <input type="text" id="nombre" name="nombre" x-model="nombre" required
                           class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                  </div>
                  <div>
                    <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
                    <input type="email" id="email" name="email" x-model="email" required
                           class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                  </div>

                  <!-- Contraseña actual -->
                  <div x-show="showPasswordFields">
                    <label for="currentPassword" class="block text-sm font-medium text-gray-700">Contraseña Actual</label>
                    <input 
                      type="password"
                      id="currentPassword" 
                      name="currentPassword"
                      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-pink-500 focus:ring-pink-500"
                    >
                  </div>

                  <!-- Nueva contraseña -->
                  <div>
                    <div class="flex items-center justify-between">
                      <label for="profileNewPassword" class="block text-sm font-medium text-gray-700">Nueva Contraseña</label>
                      <button 
                        type="button" 
                        @click="showPasswordFields = !showPasswordFields"
                        class="text-sm text-pink-600 hover:text-pink-700"
                        x-text="showPasswordFields ? 'Cancelar cambio' : 'Cambiar contraseña'"
                      >
                      </button>
                    </div>
                    <div x-show="showPasswordFields" class="mt-1">
                      <div class="flex items-center space-x-2">
                        <input 
                          :type="showPassword ? 'text' : 'password'" 
                          id="profileNewPassword" 
                          name="newPassword"
                          class="block w-full rounded-md border-gray-300 shadow-sm focus:border-pink-500 focus:ring-pink-500"
                        >
                        <button 
                          type="button"
                          @click="showPassword = !showPassword"
                          class="text-gray-400 hover:text-gray-500 focus:outline-none p-2"
                        >
                          <svg x-show="!showPassword" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                          </svg>
                          <svg x-show="showPassword" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21" />
                          </svg>
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="mt-6 flex justify-end space-x-3">
                  <button type="button" @click="open = false"
                          class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 transition-colors duration-150">
                    Cancelar
                  </button>
                  <button type="submit"
                          class="px-4 py-2 bg-pink-600 text-white text-sm font-medium rounded-md hover:bg-pink-700 transition-colors duration-150">
                    Guardar Cambios
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Columna derecha: Estadísticas -->
    <div class="w-full md:w-3/4">
      <!-- Card Principal - Total Recetas -->
      <div class="bg-white rounded-lg shadow-sm p-6 mb-6">
        <div class="flex items-center">
          <div class="p-3 bg-pink-100 rounded-lg">
            <svg class="w-6 h-6 text-pink-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
            </svg>
          </div>
          <div class="ml-4">
            <h3 class="text-lg font-medium text-gray-600">Total Recetas</h3>
            <p class="text-3xl font-bold text-gray-900"><%= recipes.length %></p>
          </div>
        </div>
      </div>

      <!-- Grid de Categorías -->
      <div class="grid grid-cols-2 lg:grid-cols-3 gap-4">
        <% const recipesByCategory = {}; %>
        <% recipes.forEach(recipe => { %>
          <% const categoryName = recipe.Category ? recipe.Category.name : 'Sin Categoría'; %>
          <% recipesByCategory[categoryName] = (recipesByCategory[categoryName] || 0) + 1; %>
        <% }); %>

        <% Object.entries(recipesByCategory).forEach(([category, count]) => { %>
          <div class="bg-white rounded-lg shadow-sm p-4">
            <div class="flex items-center">
              <div class="p-2 bg-gray-50 rounded-lg">
                <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
                </svg>
              </div>
              <div class="ml-3">
                <p class="text-sm font-medium text-gray-500"><%= category %></p>
                <p class="text-xl font-semibold text-gray-900"><%= count %></p>
              </div>
            </div>
          </div>
        <% }); %>
      </div>
    </div>
  </div>

  <!-- Tabs -->
  <div class="border-b border-gray-200 mt-8">
    <nav class="-mb-px flex space-x-8">
      <!-- Tab de perfil siempre visible -->
      <button onclick="switchTab('profile', this)" 
              class="tab-link py-4 px-1 border-b-2 font-medium text-gray-500 hover:text-pink-600 hover:border-pink-600">
        Mi Perfil
      </button>

      <!-- Tab de recetas solo para Editor y Admin -->
      <% if (user.rol !== 'Usuario') { %>
        <button onclick="switchTab('recipes', this)" 
                class="tab-link py-4 px-1 border-b-2 font-medium text-gray-500 hover:text-pink-600 hover:border-pink-600">
          Mis Recetas
        </button>
      <% } %>

      <!-- Tab de usuarios solo para Admin -->
      <% if (user.rol === 'Admin') { %>
        <button onclick="switchTab('users', this)" 
                class="tab-link py-4 px-1 border-b-2 font-medium text-gray-500 hover:text-pink-600 hover:border-pink-600">
          Usuarios
        </button>
      <% } %>
    </nav>
  </div>

  <!-- Contenido de las tabs -->
  <div class="mt-6">
    <!-- Tab de perfil siempre visible -->
    <div id="profileTab" class="tab-content">
      <!-- Contenido del perfil -->
      <div class="bg-white rounded-lg shadow-sm p-6">
        <!-- ... contenido existente del perfil ... -->
      </div>
    </div>

    <!-- Tab de recetas solo para Editor y Admin -->
    <% if (user.rol !== 'Usuario') { %>
      <div id="recipesTab" class="tab-content hidden">
        <div class="grid gap-6 grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
          <% recipes.forEach(recipe => { %>
            <div class="bg-white rounded-lg shadow overflow-hidden">
              <div class="relative">
                <% if (recipe.imagen) { %>
                  <img src="<%= recipe.imagen %>" 
                       alt="<%= recipe.titulo %>"
                       class="w-full h-48 object-cover"
                       onerror="this.src='/img/default-recipe.jpg'">
                <% } else { %>
                  <img src="/img/default-recipe.jpg" 
                       alt="Imagen por defecto"
                       class="w-full h-48 object-cover">
                <% } %>
              </div>
              <div class="p-4">
                <h3 class="font-semibold mb-2"><%= recipe.titulo %></h3>
                <div class="flex justify-end space-x-2">
                  <a href="/recipes/<%= recipe.Category ? recipe.Category.slug : 'uncategorized' %>/<%= recipe.slug %>" 
                     class="px-3 py-1.5 bg-pink-600 text-white text-sm font-medium rounded-md hover:bg-pink-700 transition-colors duration-150">Ver</a>
                  <a href="/recipes/<%= recipe.Category ? recipe.Category.slug : 'uncategorized' %>/<%= recipe.slug %>/edit" 
                     class="px-3 py-1.5 bg-pink-600 text-white text-sm font-medium rounded-md hover:bg-pink-700 transition-colors duration-150">Editar</a>
                  <button onclick="deleteRecipe('<%= recipe.id %>')" 
                          class="px-3 py-1.5 bg-pink-600 text-white text-sm font-medium rounded-md hover:bg-pink-700 transition-colors duration-150">Eliminar</button>
                </div>
              </div>
            </div>
          <% }) %>
        </div>
      </div>
    <% } %>

    <!-- Tab de usuarios solo para Admin -->
    <% if (user.rol === 'Admin') { %>
      <div id="usersTab" class="tab-content hidden">
        <!-- Gestión de Usuarios con Modal -->
        <div x-data="{ open: false, email: '', rol: 'Usuario' }">
          <!-- Header con título y botón -->
          <div class="flex justify-between items-center mb-6">
            <h2 class="text-xl font-semibold text-gray-800">Gestión de Usuarios</h2>
            <button 
              @click="open = true" 
              class="px-4 py-2 bg-pink-600 text-white text-sm font-medium rounded-md hover:bg-pink-700 transition-colors duration-150"
            >
              Nuevo Usuario
            </button>
          </div>

          <!-- Modal Nuevo Usuario -->
          <div x-show="open"
               style="display: none"
               class="fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center z-50">
            <div class="bg-white rounded-lg p-6 w-full max-w-md mx-4"
                 @click.away="open = false">
              <h3 class="text-lg font-medium text-gray-900 mb-4">Pre-registro de Usuario</h3>
              <form @submit.prevent="submitNewUser($event)">
                <div class="space-y-4">
                  <div>
                    <label for="newEmail" class="block text-sm font-medium text-gray-700">Email</label>
                    <input type="email" id="newEmail" name="email" x-model="email" required
                           class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-pink-500 focus:ring-pink-500">
                  </div>
                  <div>
                    <label for="newRol" class="block text-sm font-medium text-gray-700">Rol</label>
                    <select id="newRol" name="rol" x-model="rol" required
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-pink-500 focus:ring-pink-500">
                      <option value="Usuario">Usuario</option>
                      <option value="Editor">Editor</option>
                      <option value="Admin">Admin</option>
                    </select>
                  </div>
                </div>
                <div class="mt-6 flex justify-end space-x-3">
                  <button type="button" @click="open = false"
                          class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 transition-colors duration-150">
                    Cancelar
                  </button>
                  <button type="submit"
                          class="px-4 py-2 bg-pink-600 text-white text-sm font-medium rounded-md hover:bg-pink-700 transition-colors duration-150">
                    Pre-registrar Usuario
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
        
        <!-- Tabla de usuarios -->
        <div class="bg-white rounded-lg shadow overflow-hidden">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nombre</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Rol</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estado</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Acciones</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              <% if (allUsers && allUsers.length > 0) { %>
                <% allUsers.forEach(function(usuario) { %>
                  <tr data-user-id="<%= usuario.id %>">
                    <td class="px-6 py-4 whitespace-nowrap">
                      <div class="text-sm font-medium text-gray-900" data-nombre="<%= usuario.nombre %>"><%= usuario.nombre %></div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                      <div class="text-sm text-gray-500" data-email="<%= usuario.email %>"><%= usuario.email %></div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                      <div class="text-sm text-gray-900" data-rol="<%= usuario.rol %>"><%= usuario.rol %></div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                      <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full
                        <% if (usuario.estado === 'Activo') { %>
                          text-green-800 bg-green-100
                        <% } else if (usuario.estado === 'Pendiente') { %>
                          text-orange-800 bg-orange-100
                        <% } else { %>
                          text-red-800 bg-red-100
                        <% } %>">
                        <%= usuario.estado %>
                      </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                      <div class="flex items-center space-x-2">
                        <button 
                          onclick="editUser('<%= usuario.id %>')"
                          class="flex items-center justify-center p-2 text-sm font-medium leading-5 text-pink-600 rounded-lg hover:bg-pink-50 focus:outline-none focus:ring-2 focus:ring-pink-500 focus:ring-offset-2 transition-colors duration-150"
                          aria-label="Editar"
                        >
                          <svg class="w-5 h-5" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"></path>
                          </svg>
                        </button>
                        <button
                          onclick="deleteUser('<%= usuario.id %>')"
                          class="flex items-center justify-center p-2 text-sm font-medium leading-5 text-pink-600 rounded-lg hover:bg-pink-50 focus:outline-none focus:ring-2 focus:ring-pink-500 focus:ring-offset-2 transition-colors duration-150"
                          aria-label="Eliminar"
                        >
                          <svg class="w-5 h-5" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                          </svg>
                        </button>
                      </div>
                    </td>
                  </tr>
                <% }); %>
              <% } else { %>
                <tr>
                  <td colspan="5" class="px-6 py-4 text-center text-sm text-gray-500">
                    No hay usuarios registrados
                  </td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
    <% } %>
  </div>
</div>

<script>
function switchTab(tabName, element) {
  // Ocultar todos los contenidos
  document.querySelectorAll('.tab-content').forEach(tab => tab.classList.add('hidden'));
  
  // Desactivar todos los tabs
  document.querySelectorAll('.tab-link').forEach(link => {
    link.classList.remove('border-pink-600', 'text-pink-600');
    link.classList.add('border-transparent', 'text-gray-500');
  });
  
  // Mostrar el contenido seleccionado
  document.getElementById(`${tabName}Tab`).classList.remove('hidden');
  
  // Activar el tab seleccionado
  element.classList.remove('border-transparent', 'text-gray-500');
  element.classList.add('border-pink-600', 'text-pink-600');
}

// Activar el tab inicial
document.addEventListener('DOMContentLoaded', () => {
  // Siempre empezar en la tab de perfil
  const defaultTab = document.querySelector('button[onclick="switchTab(\'profile\', this)"]');
  if (defaultTab) {
    switchTab('profile', defaultTab);
  }
});

function editProfile() {
  window.dispatchEvent(new CustomEvent('edit-profile'));
}

function openNewUserModal() {
  window.dispatchEvent(new CustomEvent('new-user'));
}

// Función para editar perfil
async function submitEditProfile(e) {
  e.preventDefault();
  const formData = new FormData(e.target);
  
  try {
    // Primero intentamos con /api/users/profile
    let response = await fetch('/api/users/profile', {
      method: 'PUT',
      body: formData
    });

    // Si falla, intentamos con /users/profile
    if (response.status === 404) {
      response = await fetch('/users/profile', {
        method: 'PUT',
        body: formData
      });
    }

    if (!response.ok) {
      const contentType = response.headers.get("content-type");
      if (contentType && contentType.indexOf("application/json") !== -1) {
        const error = await response.json();
        throw new Error(error.message || 'Error al actualizar el perfil');
      } else {
        throw new Error('Error al actualizar el perfil');
      }
    }

    window.location.reload();
  } catch (error) {
    console.error('Error:', error);
    alert(error.message || 'Error al actualizar el perfil');
  }
}

// Función para crear nuevo usuario (solo admin)
async function submitNewUser(e) {
  e.preventDefault();
  const formData = new FormData(e.target);
  const data = {
    email: formData.get('email'),
    rol: formData.get('rol')
  };
  
  console.log('Enviando datos:', data);
  
  try {
    const response = await fetch('/users/pre-register', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    });

    if (!response.ok) {
      const error = await response.json();
      throw new Error(error.message || 'Error al pre-registrar usuario');
    }

    window.location.reload();
  } catch (error) {
    console.error('Error detallado:', error);
    alert(error.message || 'Error al pre-registrar usuario');
  }
}

// Función para eliminar usuario (solo admin)
async function deleteUser(userId) {
  if (!confirm('¿Estás seguro de que quieres eliminar este usuario?')) {
    return;
  }

  try {
    const response = await fetch(`/api/users/${userId}`, {
      method: 'DELETE'
    });

    if (response.ok) {
      window.location.reload();
    } else {
      const error = await response.json();
      alert(error.message || 'Error al eliminar el usuario');
    }
  } catch (error) {
    alert('Error al eliminar el usuario');
    console.error('Error:', error);
  }
}

// Función para eliminar receta
async function deleteRecipe(recipeId) {
  if (!confirm('¿Estás seguro de que quieres eliminar esta receta?')) {
    return;
  }

  try {
    const response = await fetch(`/api/recipes/${recipeId}`, {
      method: 'DELETE'
    });

    if (response.ok) {
      window.location.reload();
    } else {
      const error = await response.json();
      alert(error.message || 'Error al eliminar la receta');
    }
  } catch (error) {
    alert('Error al eliminar la receta');
    console.error('Error:', error);
  }
}

// Función para editar usuario
async function editUser(userId) {
  const userRow = document.querySelector(`tr[data-user-id="${userId}"]`);
  if (!userRow) return;

  const modal = document.querySelector('[x-data*="open"]');
  if (!modal) return;

  const scope = Alpine.evaluate(modal, '$data');
  scope.nombre = userRow.querySelector('[data-nombre]').textContent;
  scope.email = userRow.querySelector('[data-email]').textContent;
  scope.rol = userRow.querySelector('[data-rol]').textContent;
  scope.userId = userId;
  scope.open = true;
}

// Función para enviar edición de usuario
async function submitEditUser(e) {
  e.preventDefault();
  const formData = new FormData(e.target);
  const userId = Alpine.evaluate(e.target.closest('[x-data]'), '$data').userId;
  const data = Object.fromEntries(formData.entries());
  
  try {
    const response = await fetch(`/api/users/${userId}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    });

    if (response.ok) {
      window.location.reload();
    } else {
      const error = await response.json();
      alert(error.message || 'Error al actualizar el usuario');
    }
  } catch (error) {
    alert('Error al actualizar el usuario');
    console.error('Error:', error);
  }
}

// Función para previsualizar la imagen
function previewImage(event) {
  const file = event.target.files[0];
  if (file) {
    const reader = new FileReader();
    reader.onload = function(e) {
      document.getElementById('preview-image').src = e.target.result;
    }
    reader.readAsDataURL(file);
  }
}

// Función para eliminar la imagen
function removeImage() {
  document.getElementById('preview-image').src = '/assets/img/default-avatar.webp';
  const fileInput = document.querySelector('input[type="file"]');
  if (fileInput) {
    fileInput.value = '';
  }
}
</script>

<%- include('../partials/footer') %>
